---
templates_root: ./rrf3.x/
variables:
  # 'render-global vars'
  speed_limits:
    M566:  # Set maximum instantaneous speed changes (mm/min)
      X: 400
      Y: 400
      Z: 8
      C: 2
      E: [2, 2, 2, 2]
    M203:  # Set maximum speeds (mm/min)
      X: 35000
      Y: 35000
      Z: 1200
      C: 5000
      E: [5000, 5000, 5000, 5000]
    M201: #  Set accelerations (mm/s^2)
      X: 6000
      Y: 6000
      Z: 400
      C: 500
      E: [2500, 2500, 2500, 2500]
  motors:
    X:
      steps: 100 # steps/mm
    Y:
      steps: 100
    Z:
      steps: 800
    C:
      steps: 91.022
    E0:
      steps: 368
      reversed: false # Motor direction
    E1:
      steps: 368
      reversed: false
    E2:
      steps: 409
      reversed: true
    E3:
      steps: 409
      reversed: true
  axis:
    # Machine axis set up
    X:
      min: -29.6
      width: 363.5
    Y:
      min: -46.8
      width: 292
    Z:
      min: 0
      width: 290
    C:
      min: -45
      width: 405
  tools:
    # Tool infos
    T0: &tool0
      id: 0
      fan: 2 # Fan number
      offsets:
        X: 20.45
        Y: 44.42
        Z: -5.22
      park:
        # X/Y location of the tools' parking position
        X: -7.4
        Y: 226.3
      speed_limits: &hemera_direct_speed_limits
        M566: # maximum instantaneous speed changes (mm/min)
          X: 300
          Y: 300
        M201: #  Set accelerations (mm/s^2)
          X: 4000
          Y: 4000
    T1: &tool1
      id: 1
      fan: 4
      offsets:
        X: 20.38
        Y: 44.01
        Z: -5.06
      park:
        X: 81.4
        Y: 226.55
      speed_limits: *hemera_direct_speed_limits
    T2: &tool2
      id: 2
      fan: 6
      offsets:
        X: -9
        Y: 39
        Z: -5
      park:
        X: 214.5
        Y: 243
    T3: &tool3
      id: 3
      fan: 8
      offsets:
        X: -9
        Y: 39
        Z: -5
      park:
        X: 304.5
        Y: 243
  bed:
    width: 300
    depth: 200
    # Legal (automated) move limits
    X:
      min: 4
      max: 335
    Y:
      min: 0
      max: 200
  brushes:
    right: &right_brush
      x_max: 328.5
      width: 6
      y_min: 119
      depth: 33
    left: &left_brush
      {}
output_root: ./ilo-tc
render:
  # Output specs
  - output:
      directory: gcodes # Name of the OUTPUT directory files will be saved to
    input:
      directory: ./gcodes
      files: ["**:**"] # <input fname>:<output fname> (one star - non-recursice, two stars - recursive)
    variables: {}
  - output:
      directory: macros # Name of the OUTPUT directory files will be saved to
    input:
      directory: ./macros
      files: ["**:**"]
    variables: {}
  - output:
      directory: sys # Name of the OUTPUT directory files will be saved to
    input:
      directory: ./sys
      files: ["**:**"]
    variables: {}

  # Tool scripts
  - output: # T0
      directory: sys
    input:
      directory: ./__templates__
      files:
        - tfreeX.jinja:tfree0.g
        - tpostX.jinja:tpost0.g
        - tpreX.jinja:tpre0.g
    variables:
      tool: *tool0
  - output: # T1
      directory: sys
    input:
      directory: ./__templates__
      files:
        - tfreeX.jinja:tfree1.g
        - tpostX.jinja:tpost1.g
        - tpreX.jinja:tpre1.g
    variables:
      tool: *tool1
  - output: # T2
      directory: sys
    input:
      directory: ./__templates__
      files:
        - tfreeX.jinja:tfree2.g
        - tpostX.jinja:tpost2.g
        - tpreX.jinja:tpre2.g
    variables:
      tool: *tool2
  - output: # T3
      directory: sys
    input:
      directory: ./__templates__
      files:
        - tfreeX.jinja:tfree3.g
        - tpostX.jinja:tpost3.g
        - tpreX.jinja:tpre3.g
    variables:
      tool: *tool3
  - output: # brush right
      directory: sys/usr/brushes
    input:
      directory: ./__templates__
      files:
        - brushX.jinja:right.g
    variables:
      brush: *right_brush
  - output: # brush left
      directory: sys/usr/brushes
    input:
      directory: ./__templates__
      files:
        - brushX.jinja:left.g
    variables:
      brush: *left_brush