[tool.poetry]
name = "tc-rrf"
version = "0.0.0dev0"
description = ""
authors = ["Ilja Orlovs"]
license = "MIT"
readme = "README.md"
packages = [
    {include = "tc_rrf", from="src"},
    {include = "tc_cv", from="src"},
    {include = "duetwebapi", from="src"},
]

[tool.poetry.dependencies]
python = "~=3.11.0"
jinja2 = "^3.1.2"
pyyaml = "^6.0.1"
mergedeep = "^1.3.4"
typer = "^0.9.0"
requests = "^2.31.0"
pydantic = "^2.5.3"


[tool.poetry.group.dev.dependencies]
black = "^23.7.0"
ruff = "^0.0.280"
pytest = "^7.4.4"
pytest-asyncio = "^0.23.3"
pytest-mock = "^3.12.0"
pytest-cov = "^4.1.0"


[tool.poetry.group.video.dependencies]
opencv-python = "^4.8.1.78"
async-timer = "^1.0.3"

[tool.poetry.scripts]
tc-rrf = 'tc_rrf.__main__:cli_app'
tc-cv = 'tc_cv.__main__:cli_app'

[tool.pytest.ini_options]
addopts = "-ra -q -vv --cov=tc_cv --cov=tc_rrf --no-cov-on-fail"
testpaths = [
    "test",
]


[tool.ruff]
target-version = "py38"
select = [
    # https://beta.ruff.rs/docs/rules/
    "A", # do not shadow bultins - TODO
    "B",  # flake8-bugbear
    "C",
    "E",
    "F",
    "I",  # isort
    "W",  # pycodestyle
    "N",  # pep8 naming
    "C4", # list comprehensions
    "T20", # print()
    "PTH", # use-pathlib - todo
]
ignore = ["N802", "F841"]
line-length = 120

[tool.ruff.per-file-ignores]
"__init__.py" = [
    # imported but unused
    "F401",
    # E402 Module level import not at top of file
    "E402",
]


[tool.ruff.isort]
order-by-type = true
known-first-party = ["tc_rrf", "tc_cv"]
forced-separate = ["tests"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
